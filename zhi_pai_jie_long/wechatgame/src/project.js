require=function a(e,r,n){function t(i,o){if(!r[i]){if(!e[i]){var s="function"==typeof require&&require;if(!o&&s)return s(i,!0);if(d)return d(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=r[i]={exports:{}};e[i][0].call(l.exports,function(a){var r=e[i][1][a];return t(r||a)},l,l.exports,a,e,r,n)}return r[i].exports}for(var d="function"==typeof require&&require,i=0;i<n.length;i++)t(n[i]);return t}({cards_manager:[function(a,e,r){"use strict";function n(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}cc._RF.push(e,"fe26ftkOE9Ny6Ffwg0Ok4vY","cards_manager");var t=function(){function a(a,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(a,n.key,n)}}return function(e,r,n){return r&&a(e.prototype,r),n&&a(e,n),e}}(),d=[1,2,3,4,5,6,7,8,9,10,11,12,13],i=function(){function a(){n(this,a),this.newGame()}return t(a,null,[{key:"getInstance",value:function(){return a._instance||(a._instance=new a),a._instance}}]),t(a,[{key:"newGame",value:function(){this.allCards={};for(var a in CardPosKind)this.allCards[a]=[];this.initPlayerCards(),this.initUnknowCards(),this.initOrderingCards(),this.initOrderedCards(),this.all_card_copy=JSON.parse(JSON.stringify(this.allCards))}},{key:"replayGame",value:function(){this.allCards=JSON.parse(JSON.stringify(this.all_card_copy))}},{key:"resetGame",value:function(a){"newGame"==a?this.newGame():"replayGame"==a&&this.replayGame()}},{key:"initPlayerCards",value:function(){this.playerCards=[];for(var a in CardKind)for(var e=0;e<d.length;++e){var r=new CardData(d[e],CardKind[a],0,!1);this.playerCards.push(r)}}},{key:"initUnknowCards",value:function(){for(var a=0;a<24;++a){var e=Math.floor(Math.random()*this.playerCards.length),r=this.playerCards[e];r.posKind=CardPosKind.unKnow,this.allCards.unKnow.push(r),this.playerCards.splice(e,1)}}},{key:"initOrderingCards",value:function(){for(var a=0;a<7;++a){this.allCards.ordering.push(new Array);for(var e=0;e<=a;++e){var r=Math.floor(Math.random()*this.playerCards.length),n=this.playerCards[r];n.posKind=CardPosKind.ordering,n.isSee=!1,this.allCards.ordering[a].push(n),this.playerCards.splice(r,1)}}}},{key:"initOrderedCards",value:function(){for(var a=0;a<4;++a)this.allCards.ordered[a]=[]}},{key:"removeArrayElementByValue",value:function(a,e){for(var r=0;r<e.length;++r)if(a.value==e[r].value&&a.kind==e[r].kind)return void e.splice(r,1)}},{key:"isWinGame",value:function(){for(var a=this.allCards.ordered,e=0;e<4;++e){var r=13==a[e].length,n=!0,t=!0;if(r)for(var d=0;d<12;++d)n=n&&a[e][d].kind==a[e][d+1].kind,t=t&&a[e][d+1].value-a[e][d].value==1;if(!(r&&n&&t))return!1}return!0}},{key:"debugWin",value:function(){}}]),a}();window.PlayerCardsManager=i,cc._RF.pop()},{}],card:[function(a,e,r){"use strict";cc._RF.push(e,"f2974Y7gKxElJZo+Wp1QOgJ","card"),cc.Class({extends:cc.Component,properties:{value:{default:null,type:cc.Label},spade:{default:[],type:cc.Node},heart:{default:[],type:cc.Node},club:{default:[],type:cc.Node},diamond:{default:[],type:cc.Node},bg:{default:null,type:cc.Node}},onLoad:function(){},setCardInfo:function(a){this.cardData=a;for(var e in CardKind)for(var r=0;r<2;++r)this[e][r].active=!1,this.cardData.kind==CardKind[e]&&(this[e][r].active=!0);this.value.string=this.cardData.value,this.bg.active=!this.cardData.isSee,this.cardData.kind!=CardKind.heart&&this.cardData.kind!=CardKind.diamond||(this.value.node.color=new cc.Color(255,0,0))}}),cc._RF.pop()},{}],const_define:[function(a,e,r){"use strict";function n(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}cc._RF.push(e,"fc71fBvmIlGf4jSUninfXvA","const_define");var t={spade:0,heart:1,club:2,diamond:3},d={ordered:0,unKnow:1,knowFromUnknow:2,ordering:3};window.ordering_with=45,window.card_width=100,window.card_height=150,window.CardKind=t,window.CardPosKind=d,window.CardData=function a(e,r,t,d){n(this,a),this.value=e,this.kind=r,this.posKind=t,this.isSee=d},window.MOVE_CARD_ZORDER=100,cc._RF.pop()},{}],main_layer:[function(a,e,r){"use strict";cc._RF.push(e,"0bb00ARnD9FapHqDbSGsQ6u","main_layer"),cc.Class({extends:cc.Component,properties:{player:{default:null,type:cc.Node},cardPrefab:{default:null,type:cc.Prefab},ordered:{default:[],type:cc.Node},unKnow:{default:null,type:cc.Node},knowFromUnknow:{default:null,type:cc.Node},ordering:{default:[],type:cc.Node},btnShield:{default:null,type:cc.Button},labelWin:{default:null,type:cc.Label}},ctor:function(){this.allCardNode=[],this.moveCardNodes=[],this.isCardAnimation=!1},createCardView:function(a,e,r){var n=cc.instantiate(this.cardPrefab);return n.getComponent("card").setCardInfo(a),n.setPosition(e),n.parent=this.node,this.allCardNode.push(n),n},initDisplayAllCard:function(){var a=PlayerCardsManager.getInstance().allCards;for(var e in CardPosKind)switch(CardPosKind[e]){case CardPosKind.ordered:for(t=0;t<a[e].length;t++)for(var r=this.ordered[t].getPosition(),n=0;n<a[e][t].length;++n)d=this.createCardView(a[e][t][n],r,this.node);break;case CardPosKind.unKnow:for(var r=this.unKnow.getPosition(),t=0;t<a[e].length;t++)var d=this.createCardView(a[e][t],r,this.node);break;case CardPosKind.knowFromUnknow:break;case CardPosKind.ordering:for(t=0;t<a[e].length;t++)for(var r=this.ordering[t].getPosition(),n=0;n<a[e][t].length;++n){(d=this.createCardView(a[e][t][n],r,this.node)).isOrderingLast=n==a[e][t].length-1;var i=cc.moveTo(.15,cc.p(r.x,r.y-n*ordering_with)),o=cc.delayTime(.2),s=cc.callFunc(function(a){if(a.isOrderingLast){var e=a.getComponent("card").cardData;e.isSee=!0,a.getComponent("card").setCardInfo(e)}});d.runAction(cc.sequence(o,i,s))}}},onLoad:function(){this.btnShield.node.active=!1,this.node.on("touchstart",this.onTouchStart,this),this.node.on("touchmove",this.onTouchMove,this),this.node.on("touchend",this.onTouchEnded,this),this.resetGame("newGame")},resetGame:function(a){this.moveCardNodes=[],this.isCardAnimation=!1,this.allCardNode.forEach(function(a){a.parent=null}),this.allCardNode=[],PlayerCardsManager.getInstance().resetGame(a),this.initDisplayAllCard()},onTouchStart:function(a){var e=this.node.convertTouchToNodeSpaceAR(a.touch);for(var r in CardPosKind)switch(CardPosKind[r]){case CardPosKind.ordered:break;case CardPosKind.unKnow:if(this.unKnow.getBoundingBox().contains(e))return this.handleTouchUnknow(),!0;break;case CardPosKind.knowFromUnknow:if(this.knowFromUnknow.getBoundingBox().contains(e))return this.handleTouchKnowFromUnknow(),!0;break;case CardPosKind.ordering:var n=this.isPointInOrderingArea(e,{});if(n&&n.isIn)return this.handleTouchOrdering(n.areaCardKindIndex,n.startIndex),!0}return!0},onTouchMove:function(a){for(var e=a.getDelta(),r=0;r<this.moveCardNodes.length;++r){var n=this.moveCardNodes[r].getPosition();this.moveCardNodes[r].setLocalZOrder(MOVE_CARD_ZORDER+this.moveCardNodes[r].originZOrder),this.moveCardNodes[r].setPosition(cc.pAdd(n,e))}},onTouchEnded:function(a){if(0!=this.moveCardNodes.length){var e=this.node.convertToNodeSpaceAR(a.getStartLocation()),r=this.node.convertToNodeSpaceAR(a.getLocation());this.linkCardNode(e,r)}},isPointInOrderingArea:function(a,e){for(var r=0;r<this.ordering.length;++r){var n=this.ordering[r].getBoundingBox();if(n.x<a.x&&a.x<n.x+n.width){var t=PlayerCardsManager.getInstance().allCards.ordering[r],d=n.y+card_height;if(d-(t.length-1)*ordering_with-card_height<a.y&&a.y<d){var i=n.y+card_height-a.y,o=Math.floor(i/ordering_with),s=Math.min(o,t.length-1);return e.areaCards=t,e.areaCardKindIndex=r,e.startIndex=s,e.canLink=!1,e.areaCardPosKind=CardPosKind.ordering,e.isIn=!0,e}}}},isPointInOrderedArea:function(a,e){for(var r=0;r<this.ordered.length;++r)if(this.ordered[r].getBoundingBox().contains(a))return e.areaCards=PlayerCardsManager.getInstance().allCards.ordered[r],e.areaCardKindIndex=r,e.startIndex=e.areaCards.length-1,e.canLink=!1,e.areaCardPosKind=CardPosKind.ordered,e.isIn=!0,e},getCardNodeByCardData:function(a){for(var e=0;e<this.allCardNode.length;++e)if(a==this.allCardNode[e].getComponent("card").cardData)return this.allCardNode[e];return null},addMoveCardNode:function(a){this.moveCardNodes.push(a),a.originZOrder=a.getLocalZOrder()},handleTouchUnknow:function(){var a=PlayerCardsManager.getInstance().allCards.unKnow,e=PlayerCardsManager.getInstance().allCards.knowFromUnknow;if(a.length>0){n=this.knowFromUnknow.getPosition();if(d=this.getCardNodeByCardData(a[a.length-1])){(i=d.getComponent("card")).cardData.posKind=CardPosKind.knowFromUnknow,i.cardData.isSee=!0,i.setCardInfo(i.cardData),d.setLocalZOrder(e.length+a.length),d.runAction(cc.sequence(cc.moveTo(.1,n),cc.callFunc(function(a){a.setLocalZOrder(e.length)})));var r=a.splice(a.length-1,1);e.push(r[0])}}else{for(var n=this.unKnow.getPosition(),t=0;t<e.length;++t){var d=this.getCardNodeByCardData(e[t]);if(d){d.setPosition(n),d.setLocalZOrder(e.length-t);var i=d.getComponent("card");i.cardData.posKind=CardPosKind.unKnow,i.cardData.isSee=!1,d.getComponent("card").setCardInfo(i.cardData)}}PlayerCardsManager.getInstance().allCards.unKnow=e.reverse(),PlayerCardsManager.getInstance().allCards.knowFromUnknow=[]}},handleTouchKnowFromUnknow:function(){PlayerCardsManager.getInstance().allCards.unKnow;var a=PlayerCardsManager.getInstance().allCards.knowFromUnknow,e=this.getCardNodeByCardData(a[a.length-1]);e.starPos=e.getPosition(),this.addMoveCardNode(e)},handleTouchOrdering:function(a,e){var r=PlayerCardsManager.getInstance().allCards.ordering[a];if(r[e].isSee)for(var n=e;n<r.length;++n){var t=this.getCardNodeByCardData(r[n]);t&&r[n].isSee&&(t.starPos=t.getPosition(),this.addMoveCardNode(t))}},linkCardNode:function(a,e){var r={areaCards:null,areaCardKindIndex:-1,startIndex:null,canLink:!1,areaCardPosKind:-1},n=null,t=null,d=this.moveCardNodes[0].getComponent("card").cardData;if(d.posKind==CardPosKind.knowFromUnknow){var i=this.isPointInOrderingArea(e,{}),o=this.isPointInOrderedArea(e,{});(r=i&&i.areaCards?i:o&&o.areaCards?o:r).areaCards&&(this.canLinkCardData(r,d,r.areaCards[r.areaCards.length-1],r.areaCardPosKind),t=PlayerCardsManager.getInstance().allCards.knowFromUnknow)}else if(d.posKind==CardPosKind.ordering){var s=this.isPointInOrderingArea(a,{}),i=this.isPointInOrderingArea(e,{}),o=this.isPointInOrderedArea(e,{});(r=i&&i.areaCards?i:o&&o.areaCards?o:r).areaCards&&(this.canLinkCardData(r,d,r.areaCards[r.areaCards.length-1],r.areaCardPosKind),t=PlayerCardsManager.getInstance().allCards.ordering[s.areaCardKindIndex])}var c=r.areaCards;if(r.canLink)if(r.areaCardPosKind==CardPosKind.ordering){var l=this.ordering[r.areaCardKindIndex].getPosition();n=cc.p(l.x,l.y-c.length*ordering_with)}else r.areaCardPosKind==CardPosKind.ordered&&(n=this.ordered[r.areaCardKindIndex].getPosition());n=n?[n]:[],this.playerCardAnimation(n,c,t,r.areaCardPosKind,d.posKind)},canLinkCardData:function(a,e,r,n){if(r){if(n==CardPosKind.ordered){var t=e.value-r.value==1;a.canLink=t&&r.kind==e.kind}else if(r.value-e.value==1){var d=e.kind,i=r.kind,o=!(d!=CardKind.spade&&d!=CardKind.club||i!=CardKind.heart&&i!=CardKind.diamond);o=o||(i==CardKind.spade||i==CardKind.club)&&(d==CardKind.heart||d==CardKind.diamond),a.canLink=o}}else n==CardPosKind.ordered?a.canLink=1==e.value:n==CardPosKind.ordering&&(a.canLink=13==e.value)},playerCardAnimation:function(a,e,r,n,t){var d=this;this.btnShield.node.active=0!=this.moveCardNodes.length;for(var i=0;i<this.moveCardNodes.length;++i){var o=a[i]?a[i]:this.moveCardNodes[i].starPos;n==CardPosKind.ordering&&a[0]&&(o=cc.p(a[0].x,a[0].y-i*ordering_with),a.push(o)),this.moveCardNodes[i].index=i;var s=cc.moveTo(.2,o),c=cc.callFunc(function(t){if(d.btnShield.node.active=!1,t.setLocalZOrder(t.originZOrder),a[t.index]){var i=t.getComponent("card").cardData;i.posKind=n,e.push(i),PlayerCardsManager.getInstance().removeArrayElementByValue(i,r),t.setLocalZOrder(e.length)}});this.moveCardNodes[i].runAction(cc.sequence(s,c))}this.moveCardNodes=[],setTimeout(function(){d.updateOrderingCardSprite(r,a[0]),d.checkIsWind(r)},500)},updateOrderingCardSprite:function(a,e){if(e&&a[0]&&a[0].posKind==CardPosKind.ordering){var r=a[a.length-1];r.isSee=!0,this.getCardNodeByCardData(r).getComponent("card").setCardInfo(a[a.length-1])}},checkIsWind:function(a){PlayerCardsManager.getInstance().isWinGame()&&(this.labelWin.node.active=!0)},onClickBtnEvent:function(a){"btnNewGame"==a.currentTarget.name?this.resetGame("newGame"):"btnReplay"==a.currentTarget.name?this.resetGame("replayGame"):a.currentTarget.name}}),cc._RF.pop()},{}]},{},["card","cards_manager","const_define","main_layer"]);